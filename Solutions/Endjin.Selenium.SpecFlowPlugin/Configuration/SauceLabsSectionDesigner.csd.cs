//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Endjin.Selenium.SpecFlowPlugin.Configuration
{
    
    
    /// <summary>
    /// The CredentialsElement Configuration Element.
    /// </summary>
    public partial class CredentialsElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region AccessKey Property
        /// <summary>
        /// The XML name of the <see cref="AccessKey"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AccessKeyPropertyName = "accessKey";
        
        /// <summary>
        /// Gets or sets the AccessKey.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The AccessKey.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.AccessKeyPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string AccessKey
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.AccessKeyPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.AccessKeyPropertyName] = value;
            }
        }
        #endregion
        
        #region UserName Property
        /// <summary>
        /// The XML name of the <see cref="UserName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string UserNamePropertyName = "userName";
        
        /// <summary>
        /// Gets or sets the UserName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The UserName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.UserNamePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string UserName
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.UserNamePropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.UserNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string UrlPropertyName = "url";
        
        /// <summary>
        /// Gets or sets the Url.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Url.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.UrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Url
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.UrlPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.UrlPropertyName] = value;
            }
        }
        #endregion
        
        #region RestUrl Property
        /// <summary>
        /// The XML name of the <see cref="RestUrl"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RestUrlPropertyName = "restUrl";
        
        /// <summary>
        /// Gets or sets the RestUrl.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RestUrl.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.RestUrlPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string RestUrl
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.RestUrlPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement.RestUrlPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Endjin.Selenium.SpecFlowPlugin.Configuration
{
    
    
    /// <summary>
    /// The SauceLabsSection Configuration Section.
    /// </summary>
    public partial class SauceLabsSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the SauceLabsSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string SauceLabsSectionSectionName = "sauceLabsSection";
        
        /// <summary>
        /// Gets the SauceLabsSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection Instance
        {
            get
            {
                return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.SauceLabsSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Credentials Property
        /// <summary>
        /// The XML name of the <see cref="Credentials"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CredentialsPropertyName = "credentials";
        
        /// <summary>
        /// Gets or sets the Credentials.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Credentials.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.CredentialsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement Credentials
        {
            get
            {
                return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.CredentialsElement)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.CredentialsPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.CredentialsPropertyName] = value;
            }
        }
        #endregion
        
        #region Capabilities Property
        /// <summary>
        /// The XML name of the <see cref="Capabilities"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CapabilitiesPropertyName = "capabilities";
        
        /// <summary>
        /// Gets or sets the Capabilities.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Capabilities.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.CapabilitiesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Endjin.Selenium.SpecFlowPlugin.Configuration.Capability Capabilities
        {
            get
            {
                return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.Capability)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.CapabilitiesPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.SauceLabsSection.CapabilitiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Endjin.Selenium.SpecFlowPlugin.Configuration
{
    
    
    /// <summary>
    /// A collection of CapabilityElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Endjin.Selenium.SpecFlowPlugin.Configuration.Capability.CapabilityElementPropertyName)]
    public partial class Capability : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string CapabilityElementPropertyName = "capability";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Endjin.Selenium.SpecFlowPlugin.Configuration.Capability.CapabilityElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Endjin.Selenium.SpecFlowPlugin.Configuration.Capability.CapabilityElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement)(element)).Key;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement this[int index]
        {
            get
            {
                return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement this[object key]
        {
            get
            {
                return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement)(base.BaseGet(key)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="capability">The <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement capability)
        {
            base.BaseAdd(capability);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="capability">The <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement capability)
        {
            base.BaseRemove(this.GetElementKey(capability));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement GetItemAt(int index)
        {
            return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> with the specified key.
        /// </summary>
        /// <param name="key">The key of the <see cref="global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement GetItemByKey(string key)
        {
            return ((global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement)(base.BaseGet(((object)(key)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Endjin.Selenium.SpecFlowPlugin.Configuration
{
    
    
    /// <summary>
    /// The CapabilityElement Configuration Element.
    /// </summary>
    public partial class CapabilityElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Key Property
        /// <summary>
        /// The XML name of the <see cref="Key"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string KeyPropertyName = "key";
        
        /// <summary>
        /// Gets or sets the Key.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Key.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.KeyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Key
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.KeyPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.KeyPropertyName] = value;
            }
        }
        #endregion
        
        #region Browser Property
        /// <summary>
        /// The XML name of the <see cref="Browser"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string BrowserPropertyName = "browser";
        
        /// <summary>
        /// Gets or sets the Browser.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Browser.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.BrowserPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Browser
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.BrowserPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.BrowserPropertyName] = value;
            }
        }
        #endregion
        
        #region BrowserVersion Property
        /// <summary>
        /// The XML name of the <see cref="BrowserVersion"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string BrowserVersionPropertyName = "browserVersion";
        
        /// <summary>
        /// Gets or sets the BrowserVersion.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The BrowserVersion.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.BrowserVersionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BrowserVersion
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.BrowserVersionPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.BrowserVersionPropertyName] = value;
            }
        }
        #endregion
        
        #region Platform Property
        /// <summary>
        /// The XML name of the <see cref="Platform"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string PlatformPropertyName = "platform";
        
        /// <summary>
        /// Gets or sets the Platform.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Platform.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.PlatformPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Platform
        {
            get
            {
                return ((string)(base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.PlatformPropertyName]));
            }
            set
            {
                base[global::Endjin.Selenium.SpecFlowPlugin.Configuration.CapabilityElement.PlatformPropertyName] = value;
            }
        }
        #endregion
    }
}
